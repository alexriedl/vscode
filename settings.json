// Place your settings in this file to overwrite the default settings
{
    // Language specific settings
    "[cpp]": {
        "editor.tabSize": 4
    },
    "[c]": {
        "editor.tabSize": 4
    },

    "dotnet-test-explorer.enableTelemetry": false,
    "dotnet-test-explorer.build": false,
    "dotnet-test-explorer.restore": false,

    // Plugin Settings
    "C_Cpp.intelliSenseEngine": "Tag Parser",
    "csharp.suppressDotnetRestoreNotification": true,
    "extensions.autoUpdate": false,
    "git.autofetch": false,
    "gitlens.codeLens.enabled": false,
    "python.linting.enabled": true,
    "python.pythonPath": "python3",
    "vsicons.dontShowNewVersionMessage": true,

    "todohighlight.keywords": [
        {
            "text": "TODO:",
            "color": "green"
        },
        {
            "text": "NOTE:",
            "backgroundColor": "green",
            "color": "black"
        },
        {
            "text": "IMPORTANT:",
            "color": "white",
            "backgroundColor": "red"
        }
    ],

    // Editor Stuffs
    "debug.inlineValues": true,
    "diffEditor.renderSideBySide": true,
    "editor.autoClosingBrackets": false,
    "editor.codeLens": true,
    "editor.fontFamily": "'Consolas', 'Droid Sans Mono', 'Courier New', monospace, 'Droid Sans Fallback'",
    "editor.fontSize": 12,
    "editor.minimap.enabled": false,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.renderIndentGuides": false,
    "editor.renderLineHighlight": "all",
    "editor.renderWhitespace": "boundary",
    "editor.rulers": [ 120 ],
    "editor.tabSize": 2,
    "editor.wordWrap": "on",
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "markdown.preview.scrollEditorWithPreview": false,
    "markdown.preview.scrollPreviewWithEditorSelection": false,
    "window.closeWhenEmpty": true,
    "window.menuBarVisibility": "hidden",
    "window.newWindowDimensions": "maximized",
    "window.title": "${dirty}${rootName}${separator}${activeEditorShort}",
    "workbench.colorTheme": "Flatland Monokai",
    "workbench.editor.tabCloseButton": "off",
    "workbench.iconTheme": "vscode-icons",
    "workbench.startupEditor": "none",

    // Suggestions
    "editor.acceptSuggestionOnCommitCharacter": false,
    "editor.acceptSuggestionOnEnter": "off",

    // File Explorer Stuffs
    "explorer.openEditors.visible": 0,
    "files.exclude": {
        ".vs": true,
        "**/bin": true,
        "**/bower_components": true,
        "**/node_modules": true,
        "**/obj": true,
        "**/wwwroot": true,
        "**/.env": true
    },

    // Vim Setting
    "vim.autoindent": true,
    "vim.disableAnnoyingNeovimMessage": true,
    "vim.easymotion": true,
    "vim.enableNeovim": true,
    "vim.foldfix": true,
    "vim.hlsearch": true,
    "vim.leader": ",",
    "vim.neovimPath": "/usr/bin/nvim",
    "vim.textwidth": 100,
    "vim.useSystemClipboard": true,

    // Status Bar Color
    "vim.statusBarColorControl": false,
    "vim.statusBarColors": {
        "insert": "#007f3f",
        "normal": "#0079ce",
        "replace": "#000000",
        "visual": "#5f00af",
        "visualblock": "#a02f2f",
        "visualline": "#86592d"
    },

    // Special Vim Keybindings
    "vim.insertModeKeyBindingsNonRecursive": [
        // Easy escape
        {
            "before": [ "j", "k" ],
            "after": [ "escape" ]
        },
        {
            "before": [ "k", "j" ],
            "after": [ "escape" ]
        }
    ],
    "vim.otherModesKeyBindingsNonRecursive": [
        // Move on wrapped lines in an expected way
        /*
        {
            "before": ["k"],
            "after": ["g", "k"]
        },
        {
            "before": ["j"],
            "after": ["g", "j"]
        },
        */
        // Save and close
        {
            "before": ["Z", "Z"],
            "commands": [
                { "command": "workbench.action.files.save" },
                { "command": "workbench.action.closeActiveEditor" }
            ]
        },
        // Clear vim search
        {
            "before": ["leader", "space"],
            "commands": [
                { "command": ":nohl" }
            ]
        },
        // Go to end of line with E
        {
            "before": ["E"],
            "after": ["$"]
        },
        // Switch tabs
        // (Needed here because f[ind] will switch tabs when searching for L and H)
        {
            "before": ["H"],
            "commands": [
                { "command": "workbench.action.previousEditorInGroup" }
            ]
        },
        {
            "before": ["L"],
            "commands": [
                { "command": "workbench.action.nextEditorInGroup" }
            ]
        },
        // Keep editor preview open
        {
            "before": ["leader", "c"],
            "commands": [
                { "command": "workbench.action.keepEditor" }
            ]
        },
        {
            "before": ["g", "i"],
            "commands": [
                { "command": "editor.action.goToImplementation" }
            ]
        },
        {
            "before": ["g", "r"],
            "commands": [
                { "command": "editor.action.referenceSearch.trigger" }
            ]
        },
        // Easy motion shortcuts
        { // Search for character (all directions)
            "before": ["leader", "s"],
            "after": ["leader", "leader", "s"]
        },
        { // Find character forwards
            "before": ["leader", "f"],
            "after": ["leader", "leader", "f"]
        },
        { // Find character backwards
            "before": ["leader", "F"],
            "after": ["leader", "leader", "F"]
        },
        { // Till character forwards
            "before": ["leader", "t"],
            "after": ["leader", "leader", "t"]
        },
        { // Till character backwards
            "before": ["leader", "T"],
            "after": ["leader", "leader", "T"]
        },
        { // Start of word Backwards
            "before": ["leader", "b"],
            "after": ["leader", "leader", "b"]
        },
        { // Start of Word forwards
            "before": ["leader", "w"],
            "after": ["leader", "leader", "w"]
        }
    ],

    // Terminal
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.shell.linux": "bash",
    "terminal.integrated.commandsToSkipShell": [
        "workbench.action.closePanel",
        "workbench.action.navigateUp",

        // Default
        "editor.action.toggleTabFocusMode",
        "workbench.action.debug.continue",
        "workbench.action.debug.pause",
        "workbench.action.debug.restart",
        "workbench.action.debug.run",
        "workbench.action.debug.start",
        "workbench.action.debug.stop",
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.focusFirstEditorGroup",
        "workbench.action.focusSecondEditorGroup",
        "workbench.action.focusThirdEditorGroup",
        "workbench.action.openNextRecentlyUsedEditorInGroup",
        "workbench.action.openPreviousRecentlyUsedEditorInGroup",
        "workbench.action.quickOpen",
        "workbench.action.showCommands",
        "workbench.action.terminal.clear",
        "workbench.action.terminal.copySelection",
        "workbench.action.terminal.focus",
        "workbench.action.terminal.focusAtIndex1",
        "workbench.action.terminal.focusAtIndex2",
        "workbench.action.terminal.focusAtIndex3",
        "workbench.action.terminal.focusAtIndex4",
        "workbench.action.terminal.focusAtIndex5",
        "workbench.action.terminal.focusAtIndex6",
        "workbench.action.terminal.focusAtIndex7",
        "workbench.action.terminal.focusAtIndex8",
        "workbench.action.terminal.focusAtIndex9",
        "workbench.action.terminal.focusNext",
        "workbench.action.terminal.focusPrevious",
        "workbench.action.terminal.kill",
        "workbench.action.terminal.new",
        "workbench.action.terminal.paste",
        "workbench.action.terminal.runActiveFile",
        "workbench.action.terminal.runSelectedText",
        "workbench.action.terminal.scrollDown",
        "workbench.action.terminal.scrollDownPage",
        "workbench.action.terminal.scrollToBottom",
        "workbench.action.terminal.scrollToTop",
        "workbench.action.terminal.scrollUp",
        "workbench.action.terminal.scrollUpPage",
        "workbench.action.terminal.toggleTerminal"
    ],
    "workbench.colorCustomizations": {
        "statusBar.background": "#0079ce",
        "statusBar.noFolderBackground": "#0079ce",
        "statusBar.debuggingBackground": "#0079ce"
    }
}
